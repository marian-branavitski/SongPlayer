#BlueJ class context
comment0.target=AuthenticationGUI
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=e
comment10.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment11.params=e
comment11.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment12.params=
comment12.target=void\ resetBtnClicked()
comment12.text=\n\ Called\ when\ the\ button\ on\ the\ forgot\ password\ page\ is\ pressed.\ Initially\n\ valid\ is\ set\ to\ true.\ Global\ variable\ emailConfirmed\ changes\ based\ on\ wether\ the\n\ user\ was\ able\ to\ provide\ correct\ 4\ digit\ code\ that\ was\ sent\ to\ them\ via\ email.\n\ If\ the\ email\ is\ not\ yet\ confirmed,\ the\ email\ text\ field\ is\ validated\ to\ ensure\n\ it\ is\ not\ empty\ and\ that\ it\ exists.\ This\ is\ done\ by\ using\ the\ function\ of\ class\n\ UserList\ findUserByMail\ which\ compares\ each\ object\ of\ array\ all\ users\ to\ find\n\ the\ one\ with\ attribute\ email\ which\ is\ equal\ to\ the\ string\ parameter\ passed\ to\n\ this\ function.\ Function\ result\ is\ stored\ in\ the\ integer\ variable\ (result\ is\ index\n\ location\ of\ the\ object\ in\ the\ array),\ if\ the\ value\ of\ this\ variable\ is\ -1\ this\ means\n\ user\ with\ the\ provided\ email\ does\ not\ exist\ so\ the\ user\ will\ not\ be\ allowed\ to\ proceed\n\ with\ the\ password\ reset\ since\ the\ valid\ is\ going\ to\ be\ set\ to\ false.\ If\ valid\ is\ true\n\ it\ means\ so\ far\ the\ user\ has\ passed\ validation\ and\ has\ provided\ legit\ emai\ used\ when\n\ registering\ for\ this\ system.\ In\ this\ case\ for\ loop\ and\ instance\ of\ random\ class\ is\ used\n\ to\ randomly\ generate\ 4\ digits\ and\ concatenate\ them\ to\ one\ single\ string.\ That\ string\ with\n\ few\ other\ data\ added\ to\ it\ to\ form\ a\ mail\ message\ is\ passed\ to\ the\ function\ sendEmail\ as\ a\n\ parameter.\ This\ function\ will\ send\ the\ email\ with\ the\ code\ to\ the\ user\ provided\ email\ address.\n\ If\ the\ email\ belongs\ to\ the\ user\ trying\ to\ reset\ the\ password\ they\ will\ be\ able\ to\ access\ it\n\ and\ enter\ a\ 4\ digit\ code\ to\ the\ pop\ up\ window.\ User\ input\ is\ then\ compared\ with\ the\ randomly\n\ generated\ code\ if\ it\ is\ the\ same\ user\ has\ passed\ verification\ and\ emailConfirmed\ is\ set\ to\ true\n\ with\ relevant\ fields\ set\ to\ visible\ to\ allow\ type\ in\ new\ password\ and\ confirm\ it.\ The\ text\ on\ the\n\ button\ is\ also\ changed\ from\ confirm\ email\ to\ reset\ password,\ userWithForgottenPassword\ is\ set\ to\ the\ object\n\ of\ class\ user\ which\ is\ stored\ in\ the\ array\ at\ the\ location\ provided\ by\ the\ find\ function\ (this\ will\ be\ used\n\ for\ further\ validation\ of\ the\ new\ password).\ If\ the\ user\ entered\ wrong\ code\ a\ pop\ up\n\ appears\ stating\ they\ have\ failed\ verification\ and\ will\ need\ to\ reneter\ a\ new\ code\ sent\ to\ the\ email\n\ (new\ code\ is\ generated\ to\ avoid\ posibility\ of\ guessing\ the\ code\ and\ so\ improving\ security)\n\ \n\ When\ the\ user\ presses\ the\ button\ again\ after\ confirming\ the\ email,\ the\ function\ will\ validate\ \n\ the\ password\ fields\ first\ to\ ensure\ the\ password\ is\ at\ least\ 8\ digits\ long,\ has\ letters,\ numbers\n\ and\ special\ characters.\ This\ is\ achieved\ by\ iterating\ through\ the\ entered\ password\ and\ incrementing\n\ relevant\ counters\ when\ letter,\ number\ or\ special\ character\ is\ encountered.\ If\ the\ user\ tries\ to\ enter\ a\n\ password\ with\ a\ space\ it\ will\ set\ the\ valid\ to\ false\ as\ it\ is\ not\ allowed.\ Then\ all\ the\ counters\ are\ \n\ compared\ to\ ensure\ they\ are\ greater\ than\ 0\ and\ so\ the\ password\ is\ valid.\ To\ ensure\ the\ user\ does\ not\ \n\ enter\ the\ password\ that\ was\ previously\ used\ by\ them,\ the\ string\ with\ new\ password\ will\ be\ compared\ against\n\ the\ password\ attribute\ of\ userWithForgottenPassword.\ If\ passwords\ match,\ user\ will\ not\ be\ allowed\ to\ proceed\n\ with\ reset\ and\ will\ be\ asked\ to\ choose\ a\ new\ password.\ If\ confirm\ password\ field\ does\ not\ match\ with\ the\n\ password\ field,\ user\ will\ be\ asked\ to\ enter\ a\ matching\ password\ to\ verify\ the\ new\ password.\ If\ everything\n\ is\ valid\ changePassword\ function\ of\ the\ user\ object\ is\ used\ to\ change\ from\ old\ to\ new\ password.\ Then\ \n\ changeUserAttributesAndSave\ method\ of\ user\ list\ object\ is\ used\ to\ overwrite\ the\ existing\ user\ in\ the\ array\n\ with\ the\ new\ one\ (updating\ the\ user\ who\ reset\ the\ password)\ and\ write\ the\ array\ to\ text\ file\ to\ save\ the\ changes.\n\ User\ is\ then\ redirected\ back\ to\ the\ login\ page\n
comment13.params=
comment13.target=void\ loadCreateAccountComponents()
comment13.text=\n\ Clears\ the\ login\ panel\ from\ any\ previously\ loaded\ components.\ Populates\ the\ panel\ with\ the\ new\n\ components\ that\ make\ up\ an\ account\ creation\ page.\ KeyListener\ is\ assigned\ to\ email,\ password\ and\n\ password\ confirmation\ fields\ to\ validate\ the\ data\ as\ it\ is\ being\ typed\ by\ user,\ not\ allowing\ them\n\ to\ press\ create\ an\ account\ until\ they\ provide\ valid\ password\ and\ email\ \n
comment14.params=e
comment14.target=void\ keyTyped(java.awt.event.KeyEvent)
comment15.params=e
comment15.target=void\ keyTyped(java.awt.event.KeyEvent)
comment16.params=e
comment16.target=void\ keyTyped(java.awt.event.KeyEvent)
comment17.params=e
comment17.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment18.params=e
comment18.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment19.params=
comment19.target=void\ createAccountClicked()
comment19.text=\n\ Function\ validates\ all\ the\ data\ entered\ by\ user\ to\ ensure\ it\ is\ not\ null,\ valid\ for\ password\ and\ email\ and\ that\n\ login\ is\ unique\ by\ checking\ through\ each\ individual\ object\ in\ the\ allUsers\ array\ and\ comparing\ their\ \n\ login\ attributes.\ If\ the\ user\ passed\ validation\ sendEmail\ is\ called\ to\ send\ the\ 4\ randomly\ generated\ digits\n\ to\ the\ user\ provided\ email.\ User\ is\ then\ asked\ to\ enter\ those\ digits\ into\ the\ pop\ up\ window,\ if\ the\ digits\ \n\ are\ correct\ temporary\ user\ object\ is\ created\ with\ the\ attributes\ assigned\ as\ they\ were\ entered\ by\ the\ user.\n\ User\ ID\ is\ created\ by\ finding\ the\ last\ user,\ getting\ their\ number\ after\ 'U',\ adding\ 1\ to\ it\ and\ assigning\n\ 'U'\ in\ front\ of\ the\ new\ id.\ All\ the\ atributes\ are\ then\ added\ through\ the\ setAttribute\ method\ of\ the\ tempUser\ \n\ object.\ Then\ using\ addUserToArray,\ user\ is\ added\ to\ the\ global\ array\ of\ all\ users\ and\ using\ write\ all\ users\ to\ file\n\ the\ array\ is\ written\ to\ the\ text\ file\ to\ permanently\ apply\ the\ changes.\ The\ directory\ specific\ for\ this\ user\ is\ then\n\ created\ at\ the\ user\ folder\ at\ the\ root\ of\ this\ project.\ It\ is\ used\ to\ store\ playlists\ and\ all\ relevant\ to\ it\ data\n\ unique\ to\ each\ user.\n
comment2.params=
comment2.target=void\ initAuthenticationFrame()
comment2.text=\n\ Sets\ the\ layout\ of\ the\ autentication\ frame\ to\ no\ layout\ to\ allow\ freely\n\ positioning\ of\ the\ components\ on\ the\ frame.\ Frame\ sets\ resizable\ to\ false\n\ in\ order\ to\ prevent\ user\ from\ changing\ the\ frame\ size\ and\ avoid\ breaking\ \n\ the\ design\ and\ location\ of\ each\ component\ and\ panels\ in\ frame\n
comment20.params=
comment20.target=void\ clearAllAcountCreationFields()
comment20.text=\n\ Clears\ all\ the\ text\ fields\ that\ were\ filled\ out\ in\ account\ creation\ or\ password\ reset\ as\n\ well\ as\ setting\ all\ the\ invalid\ label\ messages\ to\ empty\ string\n
comment21.params=recipient\ subject\ emailBody
comment21.target=void\ sendEmail(java.lang.String,\ java.lang.String,\ java.lang.String)
comment21.text=\n\ This\ function\ takes\ in\ 3\ string\ parameters\ recepient\ email\ address,\ subject\ and\ main\ message\ of\ the\ mail.\ Using\ the\ object\ of\ class\ property\ the\ function\ is\ able\ to\ set\ up\ the\n\ Simple\ Mail\ Transfer\ Protocol\ server\ that\ uses\ the\ gmail\ as\ a\ host\ to\ send\ mail\ and\ port\ 587\ of\ that\ host\ to\ send\ mail\ from\ my\ machine\ to\ the\ gmail\ server\ on\ the\ web.\ Since\ this\ is\ \n\ a\ real\ server\ and\ not\ a\ local\ host,\ I\ need\ to\ provide\ sender\ email\ (my\ personal\ gmail\ in\ this\ case)\ and\ app\ password.\ App\ password\ can\ be\ generated\ in\ the\ google\ account\ page\ of\ the\ \n\ sender\ account.\ Using\ the\ instance\ of\ class\ session,\ the\ function\ creates\ a\ new\ mail\ service\ with\ all\ the\ config\ provided\ by\ properties\ (Host,\ port\ number,\ authorisation,\ enabled\ tls)\n\ return\ new\ PasswordAuthentication(sender,\ senderPassword),\ is\ used\ to\ securely\ provide\ a\ user\ name\ and\ a\ password\ of\ the\ sender\ when\ the\ session\ connects\ to\ the\ mail\ server.\ MimeMessage\n\ creates\ a\ new\ instance\ of\ that\ class\ which\ is\ the\ mail\ itself\ that\ uses\ MIME\ standard\ which\ allows\ the\ mail\ to\ have\ text\ and\ non-text\ attachments\ (e.g\ text\ file).\ The\ methods\ of\ that\ class\n\ are\ later\ used\ to\ set\ the\ recipient,\ subject\ and\ mail\ body\ of\ the\ email\ before\ using\ Transport.send\ to\ actually\ send\ the\ message.\n
comment22.params=
comment22.target=javax.mail.PasswordAuthentication\ getPasswordAuthentication()
comment23.params=
comment23.target=void\ loadTutorial()
comment23.text=\n\ Function\ is\ called\ whenever\ the\ question\ mark\ icon\ is\ pressed.\ If\ the\ global\ variable\ pageOn\n\ which\ represents\ each\ individual\ page\ the\ user\ is\ currently\ is\ on.\ If\ it\ is\ set\ to\ 'L'\n\ tutorial\ relevant\ to\ the\ login\ page\ is\ loaded,\ 'S'\ -\ relevant\ to\ sign\ up/create\ account\ \n\ page,\ 'F'\ -\ relevant\ to\ the\ forgot\ password\ page\n
comment3.params=
comment3.target=void\ initAuthenticationPanel()
comment3.text=\n\ Calls\ the\ loadLoginComponents\ function\ that\ initialises\ all\ the\ components\n\ of\ the\ login\ page\ and\ adds\ them\ to\ the\ panel.\ Sets\ the\ background\ colour\n\ of\ the\ authentication\ panel,\ it's\ layout\ to\ null\ to\ allow\ setting\ the\ \n\ components\ anywhere\ on\ the\ panel\ and\ sets\ the\ bounds\ to\ position\ the\ panel\n\ in\ the\ top\ left\ corner\ of\ the\ frame\ and\ sets\ it's\ size\ to\ take\ the\ whole\ \n\ frame.\n
comment4.params=
comment4.target=void\ loadLoginComponents()
comment4.text=\n\ Clears\ the\ authentication\ panel\ by\ removing\ all\ the\ components\ previously\n\ added\ to\ the\ authentication\ panel.\ Sets\ the\ position\ of\ all\ the\ components\n\ of\ the\ login\ page\ as\ well\ mouse\ event\ listeners\ if\ the\ component\ required\ \n\ it\n
comment5.params=e
comment5.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment6.params=e
comment6.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment7.params=e
comment7.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment8.params=
comment8.target=void\ logInPressed()
comment8.text=\n\ This\ function\ is\ called\ when\ the\ log\ in\ button\ is\ pressed.\ It\ will\ call\n\ a\ function\ of\ class\ UserList\ authenticate\ user\ which\ takes\ 2\ string\ parameters\n\ login\ and\ password,\ it\ will\ compare\ those\ parameters\ with\ all\ the\ objects\n\ of\ class\ User\ stored\ in\ the\ array\ allUsers\ of\ that\ class.\ If\ both\ login\n\ and\ password\ match\ one\ specific\ user\ the\ function\ will\ return\ the\ index\n\ where\ that\ user\ can\ be\ found\ in\ array.\ That\ index\ is\ stored\ in\ the\ variable\n\ if\ it's\ value\ is\ -1\ (rouge\ value)\ a\ pop-up\ will\ display\ a\ message\ that\ \n\ some\ of\ entered\ data\ is\ invalid\ (it\ does\ not\ specify\ where\ exactly\ the\ mistake\n\ was\ made\ for\ security\ reasons).\ If\ the\ value\ of\ variable\ index\ is\ a\ \n\ legit\ location\ of\ the\ user\ than\ that\ user\ object\ is\ pulled\ from\ the\n\ global\ array\ of\ all\ users\ and\ is\ saved\ to\ the\ sessionUser\ attribute\ of\n\ the\ child\ class\ GUI.\ CurrentUserID\ of\ the\ class\ GUI\ is\ also\ assigned\ with\n\ the\ value\ of\ the\ user's\ id\ (attribute\ of\ user\ object).\ Then\ the\ authentication\n\ frame\ is\ set\ to\ be\ invisible\ and\ a\ function\ of\ child\ class\ GUI\ is\ called\n\ to\ initialise\ the\ main\ frame\ of\ that\ class\ \n
comment9.params=
comment9.target=void\ loadForgotPasswordComponents()
comment9.text=\n\ Initialises\ the\ components\ of\ the\ forgot\ password\ page.\ Clearing\ the\ panel\n\ from\ previous\ functions\ beforehand.\ Initially\ the\ only\ the\ email\ field\ \n\ is\ visible\ and\ the\ button\ is\ set\ to\ display\ 'Confirm\ email'.\ First\n\ the\ email\ is\ validated\ in\ a\ different\ function\ resetBtnClicked\ which\ is\n\ called\ when\ the\ button\ is\ clicked.\ If\ the\ email\ has\ been\ validated\n\ other\ components\ will\ appear\ to\ allow\ enter\ a\ new\ password\ and\ confirm\ \n\ the\ new\ password\n
numComments=24
