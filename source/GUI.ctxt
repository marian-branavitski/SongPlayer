#BlueJ class context
comment0.target=GUI
comment1.params=row\ column
comment1.target=boolean\ isCellEditable(int,\ int)
comment10.params=e
comment10.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment11.params=e
comment11.target=void\ mouseExited(java.awt.event.MouseEvent)
comment12.params=e
comment12.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment13.params=e
comment13.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment14.params=e
comment14.target=void\ mouseExited(java.awt.event.MouseEvent)
comment15.params=e
comment15.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment16.params=
comment16.target=void\ redirectAccountPage()
comment16.text=\n\ Clears\ the\ panel\ from\ any\ previously\ loaded\ components.\ Initialises\n\ and\ locates\ all\ of\ the\ components\ relevant\ to\ the\ account\ page.\ Adds\ all\ the\ components\ to\n\ main\ panel.\ Sets\ all\ the\ relevant\ text\ into\ the\ text\ field\ (first\ name\ and\ last\ name).\ \n\ Sets\ the\ combo\ box\ selected\ element\ to\ which\ ever\ element\ is\ saved\ as\ user's\ prefered\ call\n\ in\ the\ all\ users\ file\n
comment17.params=
comment17.target=void\ saveAccountChangesClicked()
comment17.text=\n\ Once\ the\ button\ to\ save\ the\ changes\ is\ clicked,\ the\ function\ validates\ all\ the\ fields\ to\ \n\ ensure\ the\ user\ has\ not\ provided\ any\ empty\ fields\ in\ which\ case\ a\ relevant\ label\ will\ appear\n\ under\ the\ field\ with\ a\ missing\ value.\ If\ all\ the\ fields\ have\ passed\ validation,\ a\ confirmation\n\ pop\ up\ appears\ asking\ user\ to\ confirm\ their\ action,\ to\ ensure\ the\ user\ attributes\ are\ not\ \n\ overwritten\ by\ accident.\ If\ the\ user\ response\ is\ 0\ (clicked\ 'yes'\ on\ the\ pop\ up\ window)\ then\n\ all\ the\ values\ are\ assigned\ to\ temporary\ variable\ and\ the\ method\ changeUnessentialAttributes\n\ of\ the\ object\ currentSessionUser\ is\ used\ to\ overwrite\ the\ attributes\ of\ that\ instance\ of\ the\ user\n\ then\ using\ the\ method\ of\ user\ list\ the\ current\ user\ is\ overwritten\ in\ the\ array\ with\ all\ the\ existing\n\ users\ and\ this\ new\ data\ is\ saved\ to\ the\ file\ that\ holds\ the\ data\ about\ all\ the\ users\n
comment18.params=
comment18.target=void\ giveHelp()
comment18.text=\n\ This\ function\ works\ the\ same\ way\ as\ loadTutorial\ of\ the\ class\ AuthenticationGUI.\ It\ compares\n\ the\ value\ of\ the\ global\ currentPage\ variable\ that\ is\ updated\ whenever\ new\ components\ are\n\ load\ to\ ensure\ it\ always\ represents\ the\ correct\ page.\ Relevant\ message\ is\ then\ saved\ to\ the\n\ message\ variable\ which\ is\ then\ used\ to\ open\ up\ a\ pop\ up\ window\ with\ a\ relevant\ tutorial\ explaining\n\ how\ to\ navigate\ and\ use\ the\ page\ the\ user\ is\ on.\n
comment19.params=
comment19.target=void\ loadMainPanel()
comment2.params=
comment2.target=void\ initFrame()
comment2.text=\n\ Sets\ the\ layout\ of\ the\ main\ frame\ to\ null\ to\ allow\ freely\ positioning\ of\ the\ 2\ panels.\ Sets\ resizable\n\ to\ false\ so\ the\ user\ could\ not\ change\ the\ size\ of\ the\ frame\ which\ would\ break\ the\ design\ of\ each\ page\n\ as\ no\ layout\ is\ being\ used.\ Sets\ the\ location\ relative\ to\ null\ to\ make\ the\ frame\ open\ up\ in\ the\ middle\ \n\ of\ the\ screen.\ loadSidebar\ is\ called\ to\ populate\ and\ fully\ initialise\ the\ side\ panel\ of\ the\ system.\n\ Sidebar\ panel\ is\ then\ added\ to\ the\ main\ frame.\ loadMainPanel\ populates\ and\ initialises\ main\ panel\n\ which\ is\ then\ added\ to\ the\ frame.\ New\ instance\ of\ JFXPanel\ is\ initiated\ to\ allow\ usage\ of\ javafx\ \n\ components\ further\ in\ the\ system\ like\ the\ media\ player.\ By\ simply\ initalising\ it\ at\ the\ start\n\ and\ doing\ nothing\ with\ it,\ it\ will\ not\ appear\ in\ the\ frame\ while\ still\ allowing\ to\ use\ all\ the\ \n\ other\ javafx\ components.\n
comment20.params=indexOfPlaylist
comment20.target=void\ loadPlaylistComponents(int)
comment20.text=\n\ This\ function\ takes\ an\ integer\ parameter\ which\ allows\ the\ function\ to\ load\ the\ components\n\ of\ the\ playlist\ object\ that\ is\ located\ at\ the\ index\ of\ allPlaylist\ array\ passed\ to\ the\ function\n\ It\ gets\ the\ object\ of\ current\ playlist\ from\ the\ array\ and\ saves\ it\ to\ the\ global\ instance\ of\ current\n\ playlist.\ It\ will\ use\ the\ attributes\ of\ the\ current\ playlist\ to\ display\ the\ correct\ playlist\ cover\n\ and\ load\ the\ correct\ file\ with\ the\ songs\ of\ the\ playlist.\ Function\ will\ then\ calculate\ the\ array\ \n\ positions\ of\ next\ and\ previous\ playlists\ and\ if\ the\ user\ has\ at\ least\ 4\ playlists\ in\ their\ library\n\ the\ covers\ of\ the\ other\ playlists\ will\ appear\ to\ the\ sided\ of\ the\ cover\ of\ current\ playlist\ with\n\ mouse\ listener\ assigned\ on\ each\ cover\ to\ load\ the\ playlist\ components\ of\ that\ particular\ playlist\n\ (similar\ to\ iTunes).\ Mouse\ listeners\ are\ then\ assigned\ to\ media\ control\ buttons\ to\ load\ the\ relevant\ \n\ songs\ once\ pressed\ or\ play/pause.\ The\ table\ is\ then\ initialised\ with\ all\ the\ songs\ from\ the\ current\n\ playlist\ loaded\ in.\ Labels\ with\ mouse\ listeners\ are\ added\ to\ the\ side\ of\ the\ table\ to\ allow\n\ sorting,\ refreshing\ and\ adding\ of\ songs\ to\ the\ current\ playlist\n
comment21.params=e
comment21.target=void\ keyTyped(java.awt.event.KeyEvent)
comment22.params=e
comment22.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment23.params=e
comment23.target=void\ mouseExited(java.awt.event.MouseEvent)
comment24.params=e
comment24.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment24.text=\n\ In\ the\ following\ mouse\ listener\ functions\ of\ class\ mouse\ adapter\ are\ overwriten\ to\ change\ the\ y\ position\ of\ the\ label\ that\ \n\ contains\ the\ album\ covers\ when\ the\ mouse\ is\ hovered\ over\ them.\ When\ the\ mouse\ is\ no\ longer\ hovering\ over\ that\ album,\ the\n\ label's\ position\ is\ reset\ to\ it's\ original\n
comment25.params=e
comment25.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment26.params=e
comment26.target=void\ mouseExited(java.awt.event.MouseEvent)
comment27.params=e
comment27.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment27.text=\n\ In\ the\ following\ mouse\ listener\ functions\ of\ class\ mouse\ adapter\ are\ overwriten\ to\ change\ the\ y\ position\ of\ the\ label\ that\ \n\ contains\ the\ album\ covers\ when\ the\ mouse\ is\ hovered\ over\ them.\ When\ the\ mouse\ is\ no\ longer\ hovering\ over\ that\ album,\ the\n\ label's\ position\ is\ reset\ to\ it's\ original\n
comment28.params=e
comment28.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment29.params=e
comment29.target=void\ mouseExited(java.awt.event.MouseEvent)
comment3.params=
comment3.target=void\ loadSideBar()
comment3.text=\n\ Sets\ the\ layout\ of\ the\ sidebar\ panel\ to\ null\ to\ allow\ freely\ positioning\ of\ all\ the\ components.\ Unlike\ the\ components\ for\ the\ main\ panel\n\ there\ is\ no\ load\ components\ functions\ instead\ all\ components\ are\ positioned\ and\ loaded\ within\ the\ function\ since\ the\ sidebar\n\ and\ its\ components\ are\ static\ and\ do\ not\ change\ throughout\ the\ system\ unlike\ the\ components\ of\ the\ main\ panel\ that\ have\ to\ change\n\ based\ on\ each\ page.\ This\ function\ creates\ all\ the\ icons\ and\ assigns\ mouse\ listeners\ to\ them\ to\ make\ them\ function\ like\ links\ to\n\ a\ different\ page\n
comment30.params=e
comment30.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment30.text=\n\ In\ the\ following\ mouse\ listener\ functions\ of\ class\ mouse\ adapter\ are\ overwriten\ to\ change\ the\ y\ position\ of\ the\ label\ that\ \n\ contains\ the\ album\ covers\ when\ the\ mouse\ is\ hovered\ over\ them.\ When\ the\ mouse\ is\ no\ longer\ hovering\ over\ that\ album,\ the\n\ label's\ position\ is\ reset\ to\ it's\ original\n
comment31.params=e
comment31.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment32.params=e
comment32.target=void\ mouseExited(java.awt.event.MouseEvent)
comment33.params=e
comment33.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment33.text=\n\ In\ the\ following\ mouse\ listener\ functions\ of\ class\ mouse\ adapter\ are\ overwriten\ to\ change\ the\ y\ position\ of\ the\ label\ that\ \n\ contains\ the\ album\ covers\ when\ the\ mouse\ is\ hovered\ over\ them.\ When\ the\ mouse\ is\ no\ longer\ hovering\ over\ that\ album,\ the\n\ label's\ position\ is\ reset\ to\ it's\ original\n
comment34.params=e
comment34.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment35.params=e
comment35.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment36.params=e
comment36.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment37.params=e
comment37.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment38.params=e
comment38.target=void\ keyPressed(java.awt.event.KeyEvent)
comment39.params=e
comment39.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment4.params=e
comment4.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment40.params=e
comment40.target=void\ mouseExited(java.awt.event.MouseEvent)
comment41.params=e
comment41.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment42.params=e
comment42.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment43.params=e
comment43.target=void\ mouseExited(java.awt.event.MouseEvent)
comment44.params=e
comment44.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment45.params=e
comment45.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment46.params=e
comment46.target=void\ mouseExited(java.awt.event.MouseEvent)
comment47.params=e
comment47.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment48.params=
comment48.target=void\ playSelectedSong()
comment48.text=\n\ Function\ gets\ the\ selected\ row\ from\ the\ table\ and\ pulls\ that\ song\ from\ the\ array\n\ as\ it's\ row\ index\ is\ the\ same\ as\ it's\ position\ in\ the\ currentPlaylist\ array.\n\ Current\ song\ holds\ that\ object\ from\ the\ array\ of\ class\ CustomSong.\ It\ will\n\ pass\ that\ song\ to\ the\ loadSong\ function\ and\ will\ call\ the\ pauseBtnClicked\ to\n\ change\ the\ state\ of\ the\ pause\ button\n
comment49.params=
comment49.target=void\ deleteSongFromPlaylist()
comment49.text=\n\ Once\ the\ user\ has\ pressed\ the\ backspace\ on\ the\ selected\ rows.\ The\ function\ asks\ \n\ for\ confirmation\ before\ proceeding\ with\ the\ deletion\ of\ the\ songs.\ If\ the\ user\ clicked\n\ 'yes'\ on\ the\ pop\ up\ window\ the\ array\ of\ indecies\ of\ selected\ rows\ is\ created.\ Then\ for\n\ loop\ iterates\ through\ that\ array\ pulling\ each\ song\ from\ the\ global\ array\ of\ the\ playlist\n\ and\ assigning\ the\ name\ of\ that\ song\ to\ the\ string\ variable\ beofre\ passing\ it\ to\ the\ \n\ method\ of\ class\ CustomSongList\ deleteSong\ that\ will\ permanently\ delete\ the\n\ song\ from\ the\ playlist.\n
comment5.params=e
comment5.target=void\ mouseExited(java.awt.event.MouseEvent)
comment50.params=
comment50.target=void\ loadNextSong()
comment50.text=\n\ Function\ ensures\ that\ the\ current\ song\ is\ not\ the\ last\ song\ in\ the\n\ playlist.\ If\ it\ isn't\ the\ currentSongIndex\ is\ incremented\ to\ point\n\ at\ the\ next\ song\ in\ the\ array,\ that\ song\ is\ then\ pulled\ from\ the\ array\n\ and\ saved\ to\ current\ song\ which\ is\ passed\ to\ the\ loadSong\ function.\n\ The\ pause\ button\ also\ changes\ the\ icon\ to\ represent\ the\ media\ state\ as\n\ paused\n
comment51.params=
comment51.target=void\ loadPreviousSong()
comment51.text=\n\ Works\ in\ the\ same\ way\ as\ load\ next\ song,\ but\ checks\ that\ the\ song\ is\ not\ first\ in\ the\ playlist\ before\n\ changing\ the\ state\ of\ the\ index\ of\ current\ song\ and\ current\ song\ itself\ to\ load\ the\ previous\ song\n
comment52.params=song
comment52.target=void\ loadSong(CustomSong)
comment52.text=\n\ This\ function\ ensures\ that\ the\ passed\ parameter\ of\ the\ song\ object\ is\ not\ null.\ Then\ if\ the\n\ media\ player\ has\ been\ initialised\ before,\ it\ will\ use\ dispose\ method\ to\ remove\ the\ instance\ of\ \n\ that\ class\ before\ creating\ the\ new\ instance\ of\ the\ same\ class\ that\ will\ have\ different\ attributes\n\ to\ allow\ control\ of\ whatever\ music\ is\ being\ passed\ as\ parameter.\ After\ that\ instance\ of\ media\ is\n\ overwritten\ with\ the\ source\ attribute\ of\ the\ object\ passed\ as\ parameter\ which\ is\ a\ path\ to\ the\ \n\ song\ source\ that\ is\ saved\ in\ the\ user\ directory.\ Instance\ of\ mediaPlayer\ is\ then\ overwritten\ to\n\ provide\ control\ of\ updated\ media\ (song).\ Relevant\ labels\ are\ also\ updated\ to\ show\ the\ title\ and\n\ artist\ name\ of\ the\ current\ song.\ setOnEndOfMedia\ function\ is\ used\ to\ change\ the\ state\ of\ variable\n\ mediaIsPlaying\ to\ false\ and\ the\ icon\ of\ label\ pause\ button\ to\ change\ it's\ state\ to\ pause\ as\ the\n\ song\ has\ now\ finished\ playing\n
comment53.params=
comment53.target=void\ pauseBtnClicked()
comment53.text=\n\ This\ function\ checks\ the\ state\ of\ global\ variable\ mediaIsPlaying\n\ to\ correctly\ display\ the\ label\ with\ the\ pause\ button\ to\ show\ the\ user\n\ whether\ the\ song\ is\ playing\ or\ not\n
comment54.params=
comment54.target=void\ searchPlaylist()
comment54.text=\n\ Whenever\ user\ interacts\ with\ the\ search\ bar\ inside\ the\ playlist\ by\ typing\ in\ it,\ this\ function\ is\ called.\n\ It\ will\ call\ the\ method\ findSongByStringValues,\ pass\ the\ text\ of\ the\ searchbar\ to\ the\ methods\ and\ split\ \n\ the\ returned\ string\ by\ the\ comma,\ creating\ an\ array\ with\ all\ the\ results.\ Function\ is\ then\ called\ to\ clear\n\ the\ table\ (remove\ all\ the\ elements\ from\ it).\ For\ loop\ will\ then\ iterate\ through\ the\ array\ with\ all\ the\ indecies\n\ of\ the\ found\ songs.\ Each\ of\ these\ songs\ is\ then\ saved\ to\ the\ temporary\ song\ object\ and\ each\ attribute\ is\ assigned\ \n\ to\ the\ found\ songs\ array\ that\ is\ the\ same\ lenght\ as\ there\ are\ headings\ in\ the\ table,\ this\ creates\ a\ row\ which\ is\n\ then\ added\ to\ the\ playlist\ table\ model\n
comment55.params=indexOfPlaylist
comment55.target=void\ loadAddToExistingPlaylistComponents(int)
comment55.text=\n\ Loads\ all\ the\ components\ to\ the\ playlist\ panel,\ locates\ them\ around\ the\ panel\ and\ adds\ \n\ the\ required\ action\ listeners\ to\ the\ buttons\n
comment56.params=
comment56.target=void\ chooseSingleMusicFile()
comment56.text=\n\ Initiates\ an\ object\ of\ JFileChooser\ which\ is\ a\ pop\ up\ window\ that\ allows\ user\ to\ select\ a\ file.\ setFileFilter\ is\n\ used\ to\ limit\ the\ user\ choice\ to\ music\ file\ extensions\ (First\ string\ is\ the\ text\ that\ is\ displayed,\ the\ rest\ are\ \n\ allowed\ extensions).\ showOpenDialog\ is\ used\ to\ actually\ open\ the\ pop\ up\ window\ itself\ and\ safe\ the\ user's\ response\n\ to\ the\ variable.\ If\ the\ user\ selected\ a\ file\ then\ a\ new\ instance\ of\ file\ is\ initiated\ which\ stores\ the\ file\ selected\n\ by\ user\ from\ the\ pop\ up\ window.\ Then\ the\ selected\ file's\ absolute\ path\ is\ stored\ to\ the\ global\ variable\ which\ is\ going\ to\ \n\ be\ used\ later\ to\ copy\ the\ file\ to\ user\ directory.\ The\ destination\ of\ the\ song\ is\ also\ saved\ as\ the\ directory\ of\ all\ users\n\ +\ user\ id\ +\ the\ name\ of\ the\ file.\ If\ the\ user\ has\ selected\ a\ music\ file\ then\ the\ full\ path\ to\ it\ on\ the\ system\ is\ displayed\ \n\ under\ the\ button\ and\ a\ tooltip\ text\ is\ set\ to\ show\ a\ full\ path\ when\ the\ mouse\ hovers\ over\ it.\ Otherwise\ no\ preview\ is\ displayed\n
comment57.params=playlistTitle\ playlistIndex
comment57.target=void\ addSongToExistingListClicked(java.lang.String,\ int)
comment57.text=\n\ Takes\ 2\ parameters,\ the\ playlist\ title\ and\ it's\ index\ location\ in\ the\ global\ array.\ It\ will\ set\ the\ valid\ variable\ \n\ to\ true.\ If\ any\ of\ the\ required\ fields\ are\ empty\ it\ will\ display\ a\ label\ asking\ user\ to\ fill\ out\ the\ fields\ and\n\ will\ not\ proceed\ with\ adding\ a\ song.\ It\ will\ try\ to\ parse\ the\ numerical\ values\ like\ duration\ and\ total\ listens\ to\n\ their\ intended\ data\ types\ if\ an\ error\ is\ encounted\ then\ the\ user\ has\ not\ provided\ the\ correct\ data\ type\ and\ will\ be\n\ asked\ to\ re\ enter\ the\ data.\ If\ the\ global\ variable\ stroing\ the\ song\ source\ origin\ is\ empty\ a\ label\ will\ also\ appear\n\ asking\ to\ provide\ a\ song\ file.\ If\ all\ fields\ have\ passed\ validation,\ the\ function\ tries\ to\ copy\ the\ file\ from\ it's\ origin\n\ to\ its\ destination\ inside\ this\ system.\ It\ then\ calls\ setAttributes\ on\ a\ temporary\ song\ object\ to\ create\ a\ new\ song\n\ that\ song\ is\ then\ passed\ to\ the\ addSongtoexistingPlaylist\ which\ writes\ the\ song\ to\ the\ playlist\ file.\ All\ the\ fields\ are\ \n\ then\ cleared,\ the\ user\ recieves\ a\ confirmation\ pop\ up\ to\ confirm\ all\ changes\ were\ successful\ and\ is\ redirected\ back\ to\ \n\ the\ playlist\ they\ added\ a\ song\ to.\n
comment58.params=
comment58.target=void\ sortInPlaylistTable()
comment58.text=\n\ Clears\ the\ table\ with\ all\ the\ songs,\ uses\ the\ sortSongByRating\ of\ global\ instance\ of\ songList\ which\ uses\ bubble\ sort\n\ to\ sort\ all\ songs\ in\ array\ by\ rating,\ repopulates\ the\ table\ with\ the\ songs\ in\ array\ in\ a\ sorted\ order\n
comment59.params=playlistTitle
comment59.target=void\ refreshInPlaylistTable(java.lang.String)
comment59.text=\n\ Clears\ all\ the\ songs\ from\ the\ table.\ Reinitiates\ the\ currentSongList\ object\ to\ ensure\ it\ is\ overwritten\ with\ new\ data\ \n\ safely.\ Calls\ the\ readAll\ method\ from\ the\ object\ to\ repopulate\ the\ array\ with\ all\ songs\ with\ songs\ in\ the\ order\ they\ are\n\ in\ the\ file.\ Repopulates\ the\ table\ with\ songs\ in\ the\ order\ they\ are\ in\ an\ overwritten\ array\ of\ object\ currentSongList\n
comment6.params=e
comment6.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment60.params=
comment60.target=void\ populateInPlaylistTable()
comment60.text=\n\ Declares\ 2\ variables\ to\ store\ the\ total\ number\ of\ songs\ in\ array\ as\ well\ as\ a\ counter\ to\ store\ the\ current\ position\ in\ the\ \n\ array.\ While\ loop\ will\ iterate,\ reading\ each\ element\ from\ the\ song\ array\ spliting\ all\ the\ objects\ attributes\ separated\ by\ comma\n\ creating\ atemporary\ array\ of\ same\ size\ as\ the\ headings\ in\ the\ table.\ Each\ element\ in\ the\ temporary\ array\ is\ assigned\ with\ the\ attributes\n\ of\ the\ temporary\ song\ object\ pulled\ from\ all\ songs\ array.\ That\ temporary\ array\ (one\ table\ row)\ is\ then\ added\ to\ the\ table\ as\ a\ row.\n\ Counter\ is\ incremented\ and\ if\ it's\ same\ number\ as\ the\ number\ of\ elements\ in\ array,\ that\ means\ the\ function\ has\ reached\ the\ end\ of\ the\n\ playlist\ so\ the\ loop\ is\ terminated\n
comment61.params=
comment61.target=void\ clearInPlaylistSongsTable()
comment61.text=\n\ Iterates\ through\ the\ table\ in\ reverse\ removing\ each\ individual\ row\n
comment62.params=
comment62.target=void\ loadLibraryComponents()
comment62.text=\n\ Clears\ the\ main\ panel\ from\ previously\ loaded\ components.\ Places\ all\ the\ components\ for\ the\ library\ page\ in\ the\ correct\ places\ and\n\ adds\ them\ to\ the\ main\ panel.\ Assigns\ the\ mouse\ listeners\ to\ labels\ such\ as\ add\ playlist\ and\ playlist\ covers\ to\ make\ them\ act\n\ as\ links\ redirecting\ the\ user\ to\ the\ relevant\ pages\n
comment63.params=e
comment63.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment64.params=e
comment64.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment65.params=
comment65.target=void\ loadHomeComponents()
comment65.text=\n\ Clears\ the\ main\ panel\ from\ previously\ loaded\ components,\ since\ it\ is\ the\ first\ page\ to\ be\ loaded\ when\ the\ user\ logs\ in,\ sets\ the\ background\ \n\ and\ bounds\ of\ the\ panel.\ Checks\ what\ the\ users\ prefered\ call\ is\ to\ display\ the\ correct\ welcome\ message.\ Adds\ all\ the\ components\ in\ correct\n\ placed\ and\ adds\ them\ to\ the\ panel.\ Adds\ the\ mouse\ listener\ to\ make\ add\ playlist\ label\ redirect\ to\ playlist\ creation\ page.\ If\ the\ user\ has\n\ any\ playlist\ in\ the\ library\ then\ the\ most\ recent\ one\ is\ placed\ as\ a\ label\ with\ the\ playlist's\ cover\ acting\ as\ a\ link\ to\ the\ page\ of\ that\n\ playlist.\ Adds\ the\ action\ listener\ to\ shut\ down\ the\ system\ when\ the\ log\ out\ button\ is\ pressed\n
comment66.params=e
comment66.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment67.params=e
comment67.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment68.params=
comment68.target=void\ logOut()
comment68.text=\n\ Reinitialises\ all\ the\ valuable\ variables\ to\ hold\ no\ sensetive\ information\ for\ security\ reasons.\ Sets\ the\ main\ frame\ to\ being\ not\ \n\ visible\ and\ uses\ System.exit\ to\ exit\ from\ the\ system,\ essentially\ shuting\ it\ down\n
comment69.params=
comment69.target=void\ loadPlaylistCreationComponents()
comment69.text=\n\ Clears\ the\ main\ panel\ from\ any\ previous\ components,\ places\ all\ the\ labels\ and\ text\ fields\ in\ correct\ places\ \n\ adds\ the\ event\ listener\ to\ the\ buttons.\n
comment7.params=e
comment7.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment70.params=
comment70.target=void\ savePlaylistClicked()
comment70.text=\n\ Called\ when\ the\ save\ playlist\ button\ is\ clicked.\ Works\ like\ other\ similar\ functions\ of\ this\ class.\ Validates\ the\ fields\ to\ ensure\ they\ \n\ are\ not\ empty,\ but\ also\ checks\ that\ the\ user\ does\ not\ try\ to\ create\ a\ playlists\ with\ no\ songs\ added\ to\ it\ by\ checking\ the\ position\ of\ the\n\ songList.\ If\ passes\ validation\ attempts\ to\ write\ the\ playlist\ to\ file\ through\ the\ writeAllSongsToFile\ which\ returns\ true\ if\ file\ name\ is\ \n\ already\ taken\ in\ which\ case\ the\ user\ is\ asked\ to\ enter\ a\ new\ name.\ If\ file\ is\ not\ taken,\ copies\ every\ song\ file\ source\ from\ it's\ origin\n\ on\ user's\ device\ to\ the\ directory\ inside\ this\ system.\ Then\ creates\ a\ temporary\ customplaylist\ object\ with\ all\ the\ attributes\ of\ the\ playlist\:\n\ name,\ cover\ image\ source.\ That\ object\ is\ passed\ to\ file\ writing\ function\ to\ save\ the\ playlist\ to\ file\ containing\ all\ the\ data\ about\ all\ the\ \n\ playlists.\ Clears\ the\ fields\ and\ redirects\ back\ to\ library.\n
comment71.params=
comment71.target=void\ clearPlayistCreationFields()
comment71.text=\n\ Clears\ all\ the\ text\ fields\ and\ sets\ all\ invalid\ label\ text\ to\ empty\ strings.\n
comment72.params=
comment72.target=void\ addSongClicked()
comment72.text=\n\ Validates\ all\ song\ data\ entered\ by\ user\ to\ ensure\ it\ is\ not\ empty,\ and\ of\ correct\ data\ type\ before\ creating\ a\ temporary\ song\n\ object\ that\ is\ saved\ to\ array\ of\ all\ the\ songs\ in\ the\ playlist\ and\ added\ to\ the\ jlist\ component\ to\ show\ the\ user\ what\ songs\ are\n\ inside\ the\ playlist\n
comment73.params=
comment73.target=void\ clearSongCreationFields()
comment73.text=\n\ Clears\ all\ the\ fields\ that\ were\ used\ in\ the\ playlist\ creation.\ Sets\ all\ combo\ boxes\ to\ the\ 1st\ element\n
comment74.params=
comment74.target=void\ chooseMusic()
comment74.text=\n\ Initiates\ an\ object\ of\ JFileChooser\ which\ is\ a\ pop\ up\ window\ that\ allows\ user\ to\ select\ a\ file.\ setFileFilter\ is\n\ used\ to\ limit\ the\ user\ choice\ to\ music\ file\ extensions\ (First\ string\ is\ the\ text\ that\ is\ displayed,\ the\ rest\ are\ \n\ allowed\ extensions).\ showOpenDialog\ is\ used\ to\ actually\ open\ the\ pop\ up\ window\ itself\ and\ safe\ the\ user's\ response\n\ to\ the\ variable.\ If\ the\ user\ selected\ a\ file\ then\ a\ new\ instance\ of\ file\ is\ initiated\ which\ stores\ the\ file\ selected\n\ by\ user\ from\ the\ pop\ up\ window.\ Then\ the\ selected\ file's\ absolute\ path\ is\ stored\ to\ the\ global\ array\ which\ is\ going\ to\ \n\ be\ used\ later\ to\ copy\ the\ file\ to\ user\ directory.\ The\ destination\ of\ the\ song\ is\ also\ saved\ as\ the\ directory\ of\ all\ users\n\ +\ user\ id\ +\ the\ name\ of\ the\ file.\ If\ the\ user\ has\ selected\ a\ music\ file\ then\ the\ full\ path\ to\ it\ on\ the\ system\ is\ displayed\ \n\ under\ the\ button\ and\ a\ tooltip\ text\ is\ set\ to\ show\ a\ full\ path\ when\ the\ mouse\ hovers\ over\ it.\ Otherwise\ no\ preview\ is\ displayed.\n
comment75.params=
comment75.target=void\ chooseImg()
comment75.text=\n\ \ \ \ \ \ \ This\ function\ will\ create\ a\ file\ chooser\ dialog\ window\ which\ allows\ user\ to\ select\ an\ image\ from\ their\ system.\ The\ absolut\ path\ of\ this\ file\ is\ then\ stored\ as\ a\ string\n\ \ \ \ \ \ \ value\ which\ allows\ the\ system\ to\ copy\ it\ to\ the\ system's\ folder\ making\ it\ accessible\ on\ any\ machine\ this\ system\ will\ run\ on.\n
comment8.params=e
comment8.target=void\ mouseExited(java.awt.event.MouseEvent)
comment9.params=e
comment9.target=void\ mouseClicked(java.awt.event.MouseEvent)
numComments=76
